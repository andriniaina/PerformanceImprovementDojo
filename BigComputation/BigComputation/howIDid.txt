Original time to run the program : 27s.

We're spending a lot of time waiting for the server, doing nothing on our side. We can launch several queries in parallel and get the 10 big numbers in 1,5s
With this simple optimisation, we're down to 18 seconds.

As most of today's computers have more than one core, we can compute several SumOfDivisors at the same time.
With this second trivial optimisation, we're down to 11 seconds

SumOfDivisors is a pure function, and we compute the same thing multiple times. Memoïzing the result may save us some time.
Doing it in the simplest way (we compute SumOfDivisors(n) even if another computation with n is running), we're down to 8 seconds.

Then comes a little mathematical optimisation : 1 and n are divisors of n, and there are no divisors of n between n/2 and n. We can then reduce the size of the loop.
We're now down to 7 seconds.
If we generalize it by lowering the upper bound, we can reduce drastically the computation time.
We're now down to 3,2 seconds !

We compute using long, but the value are far below the maximum int value. Changing every long to int make us save some precious miliseconds.
We're now down to 2,8 seconds